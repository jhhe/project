<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.dao.UniversityMapper" >
  <resultMap id="BaseResultMap" type="com.project.model.University" >
    <id column="sid" property="sid" jdbcType="INTEGER" />
    <result column="university" property="university" jdbcType="VARCHAR" />
    <result column="minprice" property="minprice" jdbcType="DECIMAL" />
    <result column="maxprice" property="maxprice" jdbcType="DECIMAL" />
    <result column="overhearprice" property="overhearprice" jdbcType="DECIMAL" />
    <result column="commission" property="commission" jdbcType="DECIMAL" />
    <result column="ispay" property="ispay" jdbcType="INTEGER" />
    <result column="creationdate" property="creationdate" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sid, university, minprice, maxprice, overhearprice, commission, ispay, creationdate, 
    deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.project.model.UniversityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from gxb_university
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from gxb_university
    where sid = #{sid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from gxb_university
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.project.model.University" >
    insert into gxb_university (sid, university, minprice, 
      maxprice, overhearprice, commission, 
      ispay, creationdate, deleted
      )
    values (#{sid,jdbcType=INTEGER}, #{university,jdbcType=VARCHAR}, #{minprice,jdbcType=DECIMAL}, 
      #{maxprice,jdbcType=DECIMAL}, #{overhearprice,jdbcType=DECIMAL}, #{commission,jdbcType=DECIMAL}, 
      #{ispay,jdbcType=INTEGER}, #{creationdate,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.project.model.University" >
    insert into gxb_university
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        sid,
      </if>
      <if test="university != null" >
        university,
      </if>
      <if test="minprice != null" >
        minprice,
      </if>
      <if test="maxprice != null" >
        maxprice,
      </if>
      <if test="overhearprice != null" >
        overhearprice,
      </if>
      <if test="commission != null" >
        commission,
      </if>
      <if test="ispay != null" >
        ispay,
      </if>
      <if test="creationdate != null" >
        creationdate,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="university != null" >
        #{university,jdbcType=VARCHAR},
      </if>
      <if test="minprice != null" >
        #{minprice,jdbcType=DECIMAL},
      </if>
      <if test="maxprice != null" >
        #{maxprice,jdbcType=DECIMAL},
      </if>
      <if test="overhearprice != null" >
        #{overhearprice,jdbcType=DECIMAL},
      </if>
      <if test="commission != null" >
        #{commission,jdbcType=DECIMAL},
      </if>
      <if test="ispay != null" >
        #{ispay,jdbcType=INTEGER},
      </if>
      <if test="creationdate != null" >
        #{creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.project.model.UniversityExample" resultType="java.lang.Integer" >
    select count(*) from gxb_university
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gxb_university
    <set >
      <if test="record.sid != null" >
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.university != null" >
        university = #{record.university,jdbcType=VARCHAR},
      </if>
      <if test="record.minprice != null" >
        minprice = #{record.minprice,jdbcType=DECIMAL},
      </if>
      <if test="record.maxprice != null" >
        maxprice = #{record.maxprice,jdbcType=DECIMAL},
      </if>
      <if test="record.overhearprice != null" >
        overhearprice = #{record.overhearprice,jdbcType=DECIMAL},
      </if>
      <if test="record.commission != null" >
        commission = #{record.commission,jdbcType=DECIMAL},
      </if>
      <if test="record.ispay != null" >
        ispay = #{record.ispay,jdbcType=INTEGER},
      </if>
      <if test="record.creationdate != null" >
        creationdate = #{record.creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gxb_university
    set sid = #{record.sid,jdbcType=INTEGER},
      university = #{record.university,jdbcType=VARCHAR},
      minprice = #{record.minprice,jdbcType=DECIMAL},
      maxprice = #{record.maxprice,jdbcType=DECIMAL},
      overhearprice = #{record.overhearprice,jdbcType=DECIMAL},
      commission = #{record.commission,jdbcType=DECIMAL},
      ispay = #{record.ispay,jdbcType=INTEGER},
      creationdate = #{record.creationdate,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.model.University" >
    update gxb_university
    <set >
      <if test="university != null" >
        university = #{university,jdbcType=VARCHAR},
      </if>
      <if test="minprice != null" >
        minprice = #{minprice,jdbcType=DECIMAL},
      </if>
      <if test="maxprice != null" >
        maxprice = #{maxprice,jdbcType=DECIMAL},
      </if>
      <if test="overhearprice != null" >
        overhearprice = #{overhearprice,jdbcType=DECIMAL},
      </if>
      <if test="commission != null" >
        commission = #{commission,jdbcType=DECIMAL},
      </if>
      <if test="ispay != null" >
        ispay = #{ispay,jdbcType=INTEGER},
      </if>
      <if test="creationdate != null" >
        creationdate = #{creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where sid = #{sid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.model.University" >
    update gxb_university
    set university = #{university,jdbcType=VARCHAR},
      minprice = #{minprice,jdbcType=DECIMAL},
      maxprice = #{maxprice,jdbcType=DECIMAL},
      overhearprice = #{overhearprice,jdbcType=DECIMAL},
      commission = #{commission,jdbcType=DECIMAL},
      ispay = #{ispay,jdbcType=INTEGER},
      creationdate = #{creationdate,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
    where sid = #{sid,jdbcType=INTEGER}
  </update>
</mapper>