<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.dao.OverhearMapper" >
  <resultMap id="BaseResultMap" type="com.project.model.Overhear" >
    <id column="oid" property="oid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="resourceid" property="resourceid" jdbcType="INTEGER" />
    <result column="creationdate" property="creationdate" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
    <result column="isread" property="isread" jdbcType="INTEGER" />
    <result column="liveid" property="liveid" jdbcType="INTEGER" />
    <result column="freehear" property="freehear" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    oid, uid, resourceid, creationdate, deleted, isread, liveid, freehear
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.project.model.OverhearExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from gxb_overhear
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from gxb_overhear
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from gxb_overhear
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.project.model.Overhear" >
    insert into gxb_overhear (oid, uid, resourceid, 
      creationdate, deleted, isread, 
      liveid, freehear)
    values (#{oid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{resourceid,jdbcType=INTEGER}, 
      #{creationdate,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER}, #{isread,jdbcType=INTEGER}, 
      #{liveid,jdbcType=INTEGER}, #{freehear,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.project.model.Overhear" >
    insert into gxb_overhear
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        oid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="resourceid != null" >
        resourceid,
      </if>
      <if test="creationdate != null" >
        creationdate,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="isread != null" >
        isread,
      </if>
      <if test="liveid != null" >
        liveid,
      </if>
      <if test="freehear != null" >
        freehear,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="resourceid != null" >
        #{resourceid,jdbcType=INTEGER},
      </if>
      <if test="creationdate != null" >
        #{creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="isread != null" >
        #{isread,jdbcType=INTEGER},
      </if>
      <if test="liveid != null" >
        #{liveid,jdbcType=INTEGER},
      </if>
      <if test="freehear != null" >
        #{freehear,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.project.model.OverhearExample" resultType="java.lang.Integer" >
    select count(*) from gxb_overhear
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gxb_overhear
    <set >
      <if test="record.oid != null" >
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.resourceid != null" >
        resourceid = #{record.resourceid,jdbcType=INTEGER},
      </if>
      <if test="record.creationdate != null" >
        creationdate = #{record.creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
      <if test="record.isread != null" >
        isread = #{record.isread,jdbcType=INTEGER},
      </if>
      <if test="record.liveid != null" >
        liveid = #{record.liveid,jdbcType=INTEGER},
      </if>
      <if test="record.freehear != null" >
        freehear = #{record.freehear,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gxb_overhear
    set oid = #{record.oid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      resourceid = #{record.resourceid,jdbcType=INTEGER},
      creationdate = #{record.creationdate,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=INTEGER},
      isread = #{record.isread,jdbcType=INTEGER},
      liveid = #{record.liveid,jdbcType=INTEGER},
      freehear = #{record.freehear,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.model.Overhear" >
    update gxb_overhear
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="resourceid != null" >
        resourceid = #{resourceid,jdbcType=INTEGER},
      </if>
      <if test="creationdate != null" >
        creationdate = #{creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="isread != null" >
        isread = #{isread,jdbcType=INTEGER},
      </if>
      <if test="liveid != null" >
        liveid = #{liveid,jdbcType=INTEGER},
      </if>
      <if test="freehear != null" >
        freehear = #{freehear,jdbcType=INTEGER},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.model.Overhear" >
    update gxb_overhear
    set uid = #{uid,jdbcType=INTEGER},
      resourceid = #{resourceid,jdbcType=INTEGER},
      creationdate = #{creationdate,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER},
      isread = #{isread,jdbcType=INTEGER},
      liveid = #{liveid,jdbcType=INTEGER},
      freehear = #{freehear,jdbcType=INTEGER}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
</mapper>