<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.dao.LiveresourceMapper" >
  <resultMap id="BaseResultMap" type="com.project.model.Liveresource" >
    <id column="rid" property="rid" jdbcType="INTEGER" />
    <result column="liveid" property="liveid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="creationdate" property="creationdate" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="duration" property="duration" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rid, liveid, type, content, creationdate, deleted, uid, duration, sort, source
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.project.model.LiveresourceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from gxb_liveresource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from gxb_liveresource
    where rid = #{rid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from gxb_liveresource
    where rid = #{rid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.project.model.Liveresource" >
    insert into gxb_liveresource (rid, liveid, type, 
      content, creationdate, deleted, 
      uid, duration, sort, 
      source)
    values (#{rid,jdbcType=INTEGER}, #{liveid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{creationdate,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER}, 
      #{uid,jdbcType=INTEGER}, #{duration,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, 
      #{source,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.project.model.Liveresource" >
    insert into gxb_liveresource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        rid,
      </if>
      <if test="liveid != null" >
        liveid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="creationdate != null" >
        creationdate,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="source != null" >
        source,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="liveid != null" >
        #{liveid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="creationdate != null" >
        #{creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        #{source,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.project.model.LiveresourceExample" resultType="java.lang.Integer" >
    select count(*) from gxb_liveresource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gxb_liveresource
    <set >
      <if test="record.rid != null" >
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.liveid != null" >
        liveid = #{record.liveid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.creationdate != null" >
        creationdate = #{record.creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.duration != null" >
        duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gxb_liveresource
    set rid = #{record.rid,jdbcType=INTEGER},
      liveid = #{record.liveid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      creationdate = #{record.creationdate,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      duration = #{record.duration,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      source = #{record.source,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.model.Liveresource" >
    update gxb_liveresource
    <set >
      <if test="liveid != null" >
        liveid = #{liveid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="creationdate != null" >
        creationdate = #{creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=INTEGER},
      </if>
    </set>
    where rid = #{rid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.model.Liveresource" >
    update gxb_liveresource
    set liveid = #{liveid,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      creationdate = #{creationdate,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      duration = #{duration,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      source = #{source,jdbcType=INTEGER}
    where rid = #{rid,jdbcType=INTEGER}
  </update>
</mapper>